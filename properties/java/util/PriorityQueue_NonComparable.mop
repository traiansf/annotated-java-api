package mop;

import java.util.*;
import java.lang.*;

/**
 * Warns if PriorityQueue is about to have a non-comparable object.
 *
 * PriorityQueue does not permit null elements.
 * http://docs.oracle.com/javase/6/docs/api/java/util/PriorityQueue.html
 *
 * The definition of a non-comparable object is not clear, but it is assumed
 * that an object that does not implement the Comparable interface is deemed
 * to be non-comparable.
 *
 * @severity error
 */

PriorityQueue_NonComparable() {
	event insertnull before(Object e) :
		(
			call(* Collection+.add*(..)) ||
			call(* Queue+.offer*(..))
		) && args(e) {
		if (!(e instanceof Comparable)) {
			System.err.println("PriorityQueue does not permit null.");
		}
	}

	event insertnull before(Collection c) :
		call(* Collection+.addAll(Collection)) && args(c) {
		for (Object elem : c) {
			if (!(elem instanceof Comparable)) {
				System.err.println("PriorityQueue does not permit null.");
			}
		}
	}
}

