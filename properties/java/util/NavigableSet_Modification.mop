package mop;

import java.util.*;
import java.lang.*;

/**
 * Warns if there are a NavigableSet object and its descending set, and either
 * set is modified while an iterator over either set is in progress (except
 * through the iterator's own remove() operation).
 *
 * http://docs.oracle.com/javase/6/docs/api/java/util/NavigableSet.html#descendingSet%28%29
 *
 * @severity error
 */

NavigableSet_Modification(NavigableSet s1, NavigableSet s2, Iterator i) {
	creation event create after(NavigableSet s1) returning(NavigableSet s2) :
		call(NavigableSet NavigableSet+.descendingSet()) && target(s1) {}

	event getiter after(Collection c) returning(Iterator i) :
		call(Iterator Iterable+.iterator()) && target(c) {}

	event modify before(Set s1) :
		(
			call(* Collection+.add*(..)) ||
			call(* Collection+.clear(..)) ||
			call(* Collection+.remove*(..)) ||
			call(* Collection+.retain*(..))
		) && target(s1) {}
	event modify before(Set s2) :
		(
			call(* Collection+.add*(..)) ||
			call(* Collection+.clear(..)) ||
			call(* Collection+.remove*(..)) ||
			call(* Collection+.retain*(..))
		) && target(s2) {}

	event useiter before(Iterator i) :
		(
			call(* Iterator.hasNext(..)) ||
			call(* Iterator.next(..)) 
		) && target(i) {}

	ere : create getiter useiter* modify+ useiter

	@match {
		System.err.println("The NavigableSet was modified while an iteration over a NavigableSet that shares the same storage.");
	}
}

