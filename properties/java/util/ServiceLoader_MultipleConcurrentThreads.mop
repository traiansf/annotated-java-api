package mop;

import java.util.*;

/**
 * Warns if a ServiceLoader object is used by multiple threads.
 *
 * Instances of ServiceLoader class are not safe for use by multiple
 * concurrent threads.
 * http://docs.oracle.com/javase/6/docs/api/java/util/ServiceLoader.html
 *
 * This property warns if a ServiceLoader object is ever used by multiple
 * threads. This condition is harsher than the documentation in the sense that
 * this property warns non-concurrent use of the object.
 *
 * @severity warning
 */

ServiceLoader_MultipleConcurrentThreads(Thread t, ServiceLoader s) {
	creation event create after() returning(ServiceLoader s) :
		call(ServiceLoader ServiceLoader+.load*(..)) && thread(t) {}

	event gooduse before(ServiceLoader s) :
		(
			call(* ServiceLoader+.iterator()) ||
			call(* ServiceLoader+.reload())
		) && target(s) && thread(t2) && condition(this.t == t2) {}

	event baduse before(ServiceLoader s) :
		(
			call(* ServiceLoader+.iterator()) ||
			call(* ServiceLoader+.reload())
		) && target(s) && thread(t2) && condition(this.t != t2) {}

	ere : baduse+

	@match {
		System.err.println("A ServiceLoader object has been used by multiple threads.");
	}
}

