package mop;

import java.util.*;

/**
 * Warns if the argument of Collections.sort(List<T>, Comparator) is not comparable.
 *
 * All elements in the argument of Collections.sort(List<T>, Comparator) must
 * be mutually comparable.
 * http://docs.oracle.com/javase/6/docs/api/java/util/Collections.html#sort%28java.util.List%29
 *
 * This property verifies that comparing each pair of elements does not raise
 * a ClassCastException. This property requires O(n^2) time for n elements.
 *
 * @severity error
 */

Collections_SortComparable() {
	event invalid_sort before(List<T> list, Comparator comp) :
		call(void sort(List<T>, Comparator)) && args(list, comp) {
		for (int i = 0; i < list.size(); ++i) {
			Object o1 = list.get(i);

			for (int j = i + 1; j < list.size(); ++j) {
				Object o2 = list.get(j);
				try {
					comp.compare(o1, o2);
					comp.compare(o2, o1);
				}
				catch (ClassCastException e) {
					System.err.println(i + "-th element and " + j + "-th element are not comparable.");
				}
			}
		}
	}
}

