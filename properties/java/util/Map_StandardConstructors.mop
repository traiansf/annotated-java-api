package mop;

import java.util.*;
import java.lang.reflect.*;
import org.aspectj.lang.Signature;
import javamoprt.MOPLogging;
import javamoprt.MOPLogging.Level;

/**
 * Warns if a subclass of Map does not define the two "standard" constructors.
 *
 * All general-purpose Map implementation classes should provide two
 * "standard" constructors: a void (no arguments) constructor and a copy
 * constructor.
 * http://download.oracle.com/javase/6/docs/api/java/util/Map.html
 *
 * Having two constructors cannot be enforced by the language, as interfaces
 * cannot contain constructors. This specification dynamically checks the
 * recommendation and warns if a map does not have the two constructors. Since
 * there is no way to detect if the class is "general-purpose", a violation of
 * this property may be false positive.
 *
 * @severity warning
 */

Map_StandardConstructors() {
	event staticinit after() : staticinitialization(Map+) {
		Signature initsig = __STATICSIG;
		Class klass = initsig.getDeclaringType();		

		if (klass != null) {
			try {
				Constructor ctor1 = klass.getDeclaredConstructor((Class[]) null);
				Constructor ctor2 = klass.getDeclaredConstructor(Map.class);
			}
			catch (NoSuchMethodException e) {
				MOPLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
				MOPLogging.out.println(Level.CRITICAL, klass.getName() + " does not define the 'standard' constructors.");
			}
		}
	}
}

