package mop;

import java.io.*;

/**
 * Warns read(), available(), reset() or skip() after close().
 *
 * According to the BufferedInputStream.close() document, read(), available(),
 * reset() or skip() invocations will throw an IOException, once the stream
 * has been closed.
 * http://download.oracle.com/javase/6/docs/api/java/io/BufferedInputStream.html#close%28%29
 *
 * This property warns if a closed InputStream object invokes the
 * aforementioned methods.
 */

InputStream_ManipulateAfterClose(InputStream i) {
	event manipulate before(InputStream i) :
		(
			call(* InputStream+.read(..)) ||
			call(* InputStream+.available(..)) ||
			call(* InputStream+.reset(..)) ||
			call(* InputStream+.skip(..))
		) && target(i) {}
	event close before(InputStream i) : call(* InputStream+.close(..)) && target(i) {}

	ere : manipulate* close

	@fail {
		System.err.println("read(), available(), reset() or skip() was invoked after close().");
	}
}

