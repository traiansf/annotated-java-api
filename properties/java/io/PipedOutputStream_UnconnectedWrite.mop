package mop;

import java.io.*;

/**
 * Warns if an unconnected PipedOutputStream object performs a write operation.
 *
 * If the pipe is broken, write() fails and a runtime exception is raised.
 * http://download.oracle.com/javase/6/docs/api/java/io/PipedOutputStream.html#write%28int%29
 */
PipedOutputStream_UnconnectedWrite(PipedOutputStream o) {
	event create after() returning(PipedOutputStream o) :
		call(PipedOutputStream+.new()) {}
	event create_io after() returning(PipedOutputStream o) :
		call(PipedOutputStream+.new(PipedInputStream+)) {}

	event create_oi before(PipedOutputStream o) :
		call(PipedInputStream+.new(PipedOutputStream+)) && args(o) {}

	event connect_oi before(PipedOutputStream o) :
		call(* PipedInputStream+.connect(PipedOutputStream+)) && args(o) {}
	event connect_io before(PipedOutputStream o) :
		call(* PipedOutputStream+.connect(PipedInputStream+)) && target(o) {}

	event write before(PipedOutputStream o) :
		call(* PipedOutputStream+.write(..)) && target(o) {}

	fsm :
		initial [
			create -> unconnected
			create_io -> connected
		]
		unconnected [
			create_oi -> connected
			connect_oi -> connected
			connect_io -> connected
		]
		connected [
			write -> connected
		]

	@fail {
		System.err.println("An unconnected PipedOutputStream performed write() operation.");
	}
}

